{"version":3,"sources":["assets/resume.pdf","assets/logo.svg","assets/jill.png","assets/resume.png","components/ColorBar/ColorBar.js","components/Resume/Resume.js","components/InfoCard/InfoCard.js","components/App/App.js","index.js"],"names":["module","exports","ColorBar","handleClick","e","props","onClick","target","id","render","className","image","activeColor","color","text","src","logo","alt","key","React","Component","Resume","actions","buttons","content","colorsNoBeige","map","anchorProp","action","resumePdf","href","resumePng","InfoCard","type","mainImg","App","setState","renderColorBars","state","colors","ReactDOM","StrictMode","document","getElementById"],"mappings":"ylDAAAA,EAAOC,QAAU,IAA0B,oC,kBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,kLCkC5BC,E,4MA7BbC,YAAc,SAAAC,GACZ,EAAKC,MAAMC,QAAQF,EAAEG,OAAOC,K,EAG9BC,OAAS,WAAO,IAEVC,EAAWC,EAFF,iBACLN,MAASO,EADJ,EACIA,YAAaC,EADjB,EACiBA,MAAOL,EADxB,EACwBA,GAAIM,EAD5B,EAC4BA,KAYzC,MATc,UAAVD,GACFH,EAAY,iBACZC,EAAQ,yBAAKH,GAAG,OAAOO,IAAMC,IAAOC,IAAI,8BAExCP,EADSG,IAAUD,EACV,2BAAuBC,GAEvB,oBAAgBA,GAGpB,yBACLH,UAAYA,EACZQ,IAAMV,EACNA,GAAKK,EACLP,QAAU,EAAKH,aAEbW,EACAH,I,YAzBeQ,IAAMC,W,kDCwCdC,E,4MArCbZ,OAAS,WACP,IAAMa,EAAU,CAAC,WAAY,QACvBC,EAAUC,EAAQC,cAAcC,KAAI,SAACb,EAAOL,GAChD,IACImB,EAAYjB,EADVkB,EAASN,EAAQd,GAavB,MAVe,aAAXoB,GACFD,EAAa,CAAE,SAAYE,KAC3BnB,EAAS,wBAAoBG,IACT,SAAXe,GACTD,EAAa,CAAE,OAAU,UACzBjB,EAAS,wBAAoBG,IAE7BH,EAAS,wBAAoBG,EAApB,cAGJ,qCACLK,IAAMV,EACNE,UAAYA,EACZoB,KAAOD,KACHF,GAEFC,MAIN,OACE,yBAAKlB,UAAU,aACb,yBAAKA,UAAU,mBAAmBK,IAAMgB,IAAYd,IAAI,sBACxD,yBAAKP,UAAU,kBACXa,K,YA/BSJ,IAAMC,WCiBZY,E,4MAjBbvB,OAAS,WAAO,IAAD,EACa,EAAKJ,MAAd4B,GADJ,EACLT,QADK,EACIS,MAEjB,MAAa,SAATA,EAEA,yBAAKvB,UAAU,aACb,yBAAKA,UAAU,gBAAgBK,IAAMmB,IAAUjB,IAAI,gBAGrC,WAATgB,EACF,kBAAC,EAAD,MAEA,yBAAKvB,UAAU,e,YAbLS,IAAMC,WC6Dde,G,wDAxDb,aAAe,IAAD,8BACZ,gBAKF7B,QAAU,SAAAE,GACR,EAAK4B,SAAS,CAAExB,YAAaJ,KAPjB,EAUd6B,gBAAkB,WAAO,IACNzB,EADK,eACd0B,MAAS1B,YAEjB,OAAOY,EAAQe,OAAOb,KAAI,SAACb,EAAOL,GAChC,OACE,kBAAC,EAAD,CACEU,IAAMV,EACNI,YAAcA,EACdC,MAAQA,EACRP,QAAU,EAAKA,cAnBT,EAyBdG,OAAS,WAAO,IAEVwB,EADarB,EADJ,eACL0B,MAAS1B,YAGjB,OAAQA,GACN,IAAK,QACHqB,EAAO,OACP,MACF,IAAK,OACHA,EAAO,QACP,MACF,IAAK,QACHA,EAAO,SACP,MACF,QACEA,EAAO,GAGX,OACE,yBAAKzB,GAAG,WACN,yBAAKA,GAAG,UACJ,EAAK6B,mBAET,yBAAK3B,UAAYE,EAAcJ,GAAG,QAChC,kBAAC,EAAD,CAAUgB,QAAUA,EAAUS,KAAOA,OA9C3C,EAAKK,MAAQ,CAAE1B,YAAa,QAASqB,KAAM,QAH/B,E,UADEd,IAAMC,YCJxBoB,IAAS/B,OACP,kBAAC,IAAMgC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f5233e74.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.df58e11b.pdf\";","module.exports = __webpack_public_path__ + \"static/media/logo.ae6a6902.svg\";","module.exports = __webpack_public_path__ + \"static/media/jill.a1ee4a9a.png\";","module.exports = __webpack_public_path__ + \"static/media/resume.18c0a490.png\";","import React from 'react';\n\nimport logo from '../../assets/logo.svg';\n\nclass ColorBar extends React.Component {\n  handleClick = e => {\n    this.props.onClick(e.target.id);\n  }\n\n  render = () => {\n    const { props: { activeColor, color, id, text } } = this;\n    let className, image;\n\n    if (color === 'beige') {\n      className = 'color-bar-main';\n      image = <img id='logo' src={ logo } alt=\"Jill Michelle Moore logo\" />;\n    } else if (color === activeColor) {\n      className = `color-bar active ${color}`;\n    } else {\n      className = `color-bar ${color}`\n    }\n\n    return <div \n      className={ className }\n      key={ id }\n      id={ color }\n      onClick={ this.handleClick }\n    >\n      { text }\n      { image }\n    </div>\n  }\n}\n\nexport default ColorBar;\n","import React from 'react';\n\nimport content from '../../content.json';\nimport resumePdf from '../../assets/resume.pdf';\nimport resumePng from '../../assets/resume.png';\n\nclass Resume extends React.Component {\n  render = () => {\n    const actions = ['DOWNLOAD', 'OPEN'];\n    const buttons = content.colorsNoBeige.map((color, id) => {\n      const action = actions[id];\n      let anchorProp, className;\n\n      if (action === 'DOWNLOAD') {\n        anchorProp = { 'download': resumePdf };\n        className = `resume-button ${color}`;\n      } else if (action === 'OPEN') {\n        anchorProp = { 'target': '_blank' };\n        className = `resume-button ${color}`;\n      } else {\n        className = `resume-button ${color} no-action`;\n      }\n\n      return <a\n        key={ id }\n        className={ className }\n        href={ resumePdf }\n        {...anchorProp}\n      >\n        { action }\n      </a>;\n    });\n\n    return (\n      <div className='info-card'>\n        <img className='resume-thumbnail' src={ resumePng } alt='Jill Moore resume' />\n        <div className='resume-options'>\n          { buttons }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Resume;\n","import React from 'react';\n\nimport mainImg from '../../assets/jill.png'\nimport Resume from '../../components/Resume/Resume';\n\nclass InfoCard extends React.Component {  \n  render = () => {\n    const { content, type } = this.props;\n\n    if (type === 'main') {\n      return (\n        <div className='info-card'>\n          <img className='info-card-img' src={ mainImg } alt='Jill Moore' />\n        </div>\n      );\n    } else if (type === 'resume') {\n      return <Resume />;\n    } else {\n      return <div className='info-card'></div>;\n    }\n  }\n}\n\nexport default InfoCard;\n","import React from 'react';\n\nimport content from '../../content.json';\n\nimport ColorBar from '../ColorBar/ColorBar';\nimport InfoCard from '../InfoCard/InfoCard';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = { activeColor: 'beige', type: 'main' };\n  }\n\n  onClick = id => {\n    this.setState({ activeColor: id });\n  }\n\n  renderColorBars = () => {\n    const { state: { activeColor } } = this;\n\n    return content.colors.map((color, id) => {\n      return (\n        <ColorBar\n          key={ id }\n          activeColor={ activeColor }\n          color={ color }\n          onClick={ this.onClick }\n        />\n      );\n    });\n  }\n\n  render = () => {\n    const { state: { activeColor } } = this;\n    let type;\n\n    switch (activeColor) {\n      case 'beige':\n        type = 'main';\n        break;\n      case 'blue':\n        type = 'hello';\n        break;\n      case 'green':\n        type = 'resume';\n        break;\n      default:\n        type = '';\n    }\n\n    return (\n      <div id='wrapper'>\n        <div id='banner'>\n          { this.renderColorBars() }\n        </div>\n        <div className={ activeColor } id='main'>\n          <InfoCard content={ content } type={ type } />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}